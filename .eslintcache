[{"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/main.ts":"1","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/components/index.ts":"2","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/App.vue":"3","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/components/MapleButton.vue":"4","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/components/MapleIcon.vue":"5","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/components/MapleButtonGroups.vue":"6","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/components/MapleCollapse.vue":"7","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/utils/props/button.ts":"8","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/utils/setup/getClass.ts":"9","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/utils/check.ts":"10","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/testComponents/TestMapleButton.vue":"11","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/testComponents/TestMapleIcon.vue":"12","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/testComponents/TestMapleButtonGroups.vue":"13","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/testComponents/TestMapleCollapse.vue":"14"},{"size":168,"mtime":1623829097425,"results":"15","hashOfConfig":"16"},{"size":503,"mtime":1623836848691,"results":"17","hashOfConfig":"16"},{"size":655,"mtime":1623831556772,"results":"18","hashOfConfig":"16"},{"size":693,"mtime":1623836168391,"results":"19","hashOfConfig":"16"},{"size":931,"mtime":1623834185174,"results":"20","hashOfConfig":"16"},{"size":3486,"mtime":1623836172840,"results":"21","hashOfConfig":"16"},{"size":4537,"mtime":1623848003333,"results":"22","hashOfConfig":"16"},{"size":787,"mtime":1623638920616,"results":"23","hashOfConfig":"16"},{"size":543,"mtime":1623640299979,"results":"24","hashOfConfig":"16"},{"size":107,"mtime":1623636641206,"results":"25","hashOfConfig":"16"},{"size":479,"mtime":1623838293660,"results":"26","hashOfConfig":"16"},{"size":71,"mtime":1623596419286,"results":"27","hashOfConfig":"16"},{"size":760,"mtime":1623838305592,"results":"28","hashOfConfig":"16"},{"size":561,"mtime":1623838310479,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1fir9ca",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/main.ts",[],["61"],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/components/index.ts",[],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/App.vue",[],["62"],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/components/MapleButton.vue",[],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/components/MapleIcon.vue",[],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/components/MapleButtonGroups.vue",[],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/components/MapleCollapse.vue",["63"],"<!--折叠手风琴-->\n<template>\n    <div class=\"accordion\">\n        <div class=\"accordion-item\" v-for=\"item of list\" :key=\"item.key\">\n            <button\n                class=\"accordion-button btn-sm\"\n                @click=\"changeAccordion(item)\"\n                :class=\"{\n                    collapsed: !(\n                        collapse[item.key] && collapse[item.key].collapsed\n                    )\n                }\"\n            >\n                <slot name=\"title\">{{ item.title }}</slot>\n            </button>\n            <div\n                class=\"accordion-collapse\"\n                :class=\"collapse[item.key] && collapse[item.key].class\"\n            >\n                <div class=\"accordion-body\">\n                    <slot name=\"content\">{{ item.content }}</slot>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, toRefs } from 'vue';\nimport { getType } from '@/utils/check';\n\nexport default {\n    props: {\n        modelValue: {\n            // 双向绑定值\n            required: true,\n            validator(value: any) {\n                return getType(value) !== 'object';\n            }\n        },\n        list: {\n            // 选项列表\n            required: true,\n            type: Array\n        },\n        type: {\n            // 交互类型\n            validator(value: string) {\n                return ['single', 'multiple'].includes(value);\n            },\n            default: 'single'\n        }\n    },\n    setup(props, { emit }) {\n        const { modelValue, list, type }: any = toRefs(props),\n            collapse: any = computed({\n                set(v) {\n                    emit('update:model-value', v);\n                    emit('on-change', v);\n                },\n                get() {\n                    const d: any = {},\n                        isArray =\n                            type.value === 'multiple' &&\n                            getType(modelValue.value) === 'array';\n                    let bl = false;\n\n                    switch (true) {\n                        case modelValue.value == null:\n                            break;\n                        case type.value === 'multiple' &&\n                            getType(modelValue.value) !== 'array':\n                            throw new Error(\n                                'When the type is multiple, modelValue must be Array type'\n                            );\n                        case type.value === 'single' &&\n                            getType(modelValue.value) === 'array':\n                            throw new Error(\n                                'When the type is single, modelValue must be Number or String or null or undefined'\n                            );\n                    }\n\n                    for (const { key } of list.value.values()) {\n                        bl = isArray\n                            ? modelValue.value.includes(key + '')\n                            : modelValue.value === key + '';\n                        d[key] = {\n                            collapsed: bl,\n                            class: {\n                                collapse: true,\n                                show: bl,\n                                'collapse-hide': false,\n                                'collapse-show': bl\n                            }\n                        };\n                    }\n                    return d;\n                }\n            }),\n            changeAccordion = (item: any) => {\n                const d = new Set();\n\n                for (const [key, value] of Object.entries(collapse.value)) {\n                    // if ((value as any).collapsed) d.add(key);\n                    if ((<any>value).collapsed) d.add(key);\n                }\n                if (type.value === 'multiple') {\n                    d.has(item.key + '')\n                        ? d.delete(item.key + '')\n                        : d.add(item.key + '');\n                    collapse.value = [...d];\n                } else {\n                    d.has(item.key + '')\n                        ? (collapse.value = null)\n                        : (collapse.value = item.key + '');\n                }\n            };\n\n        return {\n            collapse,\n            changeAccordion\n        };\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.collapse-show {\n    max-height: 300px;\n    transition: max-height 1s ease;\n}\n.collapse-hide {\n    max-height: 0;\n    overflow: hidden;\n    transition: max-height 0.5s ease !important;\n}\n</style>\n","/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/utils/props/button.ts",[],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/utils/setup/getClass.ts",[],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/utils/check.ts",[],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/testComponents/TestMapleButton.vue",[],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/testComponents/TestMapleIcon.vue",[],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/testComponents/TestMapleButtonGroups.vue",[],"/Users/maple/Desktop/work/Maple/plugins/vue-maple/src/testComponents/TestMapleCollapse.vue",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"64","replacedBy":"65"},{"ruleId":null,"fatal":true,"severity":2,"message":"66","line":106,"column":16},"newline-after-var",["67"],"Parsing error: Unexpected token. Did you mean `{'}'}` or `&rbrace;`?","padding-line-between-statements"]